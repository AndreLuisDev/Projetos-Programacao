	- Linguagem popular, simplista, f√°cil de uso e compat√≠vel com a maioria dos SO.
	- Capacidade de auxiliar outras linguagens --> implanta novos m√≥dulos ou usa bibliotecas;

	PYTHON
	- linguagem interpretada - o c√≥digo fonte √© executado diretamente pelo INTERPRETADOR (browser ou software) - n√£o √© preciso transform√°-lo em linguagem de m√°quina para Programa Objeto e depois execut√°-lo.

	| ----CARACTER√çSTICAS-----|

	Linguagem de alto n√≠vel
	Orientada a objetos
	Tipagem din√¢mica e forte
	F√°cil aprendizagem
	Comunidade ativa
	Muitas bibliotecas/recursos
	Linguagem interpretada

********√â uma linguagem de programa√ß√£o na qual o c√≥digo fonte √© executado por um programa de computador chamado interpretador que, em seguida, √© executado pelo sistema operacional ou processador.

Qual componente √© o interpretador?
O interpretador √© um software que l√™ e executa o c√≥digo-fonte de uma linguagem de programa√ß√£o diretamente, sem a necessidade de compila√ß√£o pr√©via. Ele traduz o c√≥digo linha por linha e o executa imediatamente.

Exemplos de interpretadores:
Python ‚Üí O interpretador do Python executa scripts .py diretamente.

JavaScript ‚Üí Interpretado pelos navegadores atrav√©s do motor V8 (Chrome) ou SpiderMonkey (Firefox).

Ruby ‚Üí Executado pelo interpretador Ruby MRI.

Se precisar de mais detalhes, √© s√≥ avisar! üòä



		o interpretador √© um compilador intermedi√°rio ent√£o do Python?


	O ChatGPT disse:
		N√£o exatamente. O interpretador do Python n√£o √© um "compilador intermedi√°rio", mas ele faz um processo misto de compila√ß√£o e interpreta√ß√£o.

	Como funciona a execu√ß√£o do c√≥digo Python:
	Compila√ß√£o para Bytecode:

		Quando voc√™ executa um script Python, o interpretador primeiro compila o c√≥digo-fonte para um formato intermedi√°rio chamado bytecode (arquivos .pyc na pasta __pycache__).

		Isso n√£o √© uma compila√ß√£o para c√≥digo de m√°quina, como em linguagens como C, mas sim para um formato intermedi√°rio que a m√°quina virtual do Python entende.

		Interpreta√ß√£o pela M√°quina Virtual (PVM - Python Virtual Machine):

		O bytecode gerado √© ent√£o interpretado pela PVM (Python Virtual Machine), que executa cada instru√ß√£o.

		Diferen√ßa entre Compilador e Interpretador no Python:
Um compilador tradicional traduz o c√≥digo-fonte diretamente para c√≥digo de m√°quina e gera um execut√°vel.

		O interpretador do Python faz uma compila√ß√£o intermedi√°ria (para bytecode) e, depois, interpreta esse bytecode na PVM.

		Ent√£o, o interpretador do Python n√£o √© um compilador intermedi√°rio, mas sim um sistema que compila o c√≥digo para bytecode e o executa interpretando esse bytecode.

